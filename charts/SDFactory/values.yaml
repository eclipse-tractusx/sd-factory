# Default values for sdfactory.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

    # -- Number of Replicas for pods
replicaCount: 1


image:
    # -- Image to use for deploying an application
  repository: "ghcr.io/catenax-ng/tx-sd-factory/sdfactory"
    # -- Set the Image Pull Policy
  pullPolicy: Always
    # -- Image tage is defined in chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
    # -- Specifies whether a service account should be created
  create: true
    # -- Annotations to add to the service account
  annotations: {}
    # -- The name of the service account to use.
    # -- If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}


podSecurityContext:
  fsGroup: 2000

securityContext:
    # -- Controls whether a process can gain more privileges
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

sdfactory:
  secret:
    # -- JWK Set URI
    jwkSetUri: ""
    # -- Custodian wallet client id
    clientId: ""
    # -- Custodian wallet client secret
    clientSecret: ""
    # -- Keycloak URL
    authServerUrl: ""
    # -- Keycloak Realm detail
    realm: ""
    # -- Keycloak Resource detail
    resource: ""
    # -- Details for Custodian wallet URI
    custodianWalletUri: ""
    # -- Details for Clearing House URI
    clearingHouseUri: ""
    # -- Details for Clearing House URL
    clearingHouseServerUrl: ""
    # -- Details for Clearing House Realm
    clearingHouseRealm: ""
    # -- Details for Clearing House Client ID
    clearingHouseClientId: ""
    # -- Details for Clearing House Client Secret
    clearingHouseClientSecret: ""


service:
    # -- Type of service
  type: ClusterIP
    # -- Port details for sevice
  port: 80
    # -- Container Port details for sevice
  targetPort: 8080
  
ingress:
    # -- If you want to enable the ingress
  enabled: false
    # -- a reference to an Ingress Class resource that contains additional configuration including the name of the controller that should implement the class.
  className: ""
    # -- Kubernetes resources that represent certificate authorities that are able to generate signed certificates by honoring certificate signing requests.
  issuer: "letsencrypt-prod" 
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # -- Host of the application on which application runs
    - host: ""
      paths:
        - path: /
    # -- ImplementationSpecific path type matching is up to the IngressClass. Implementations can treat this as a separate pathType or treat it identically to Prefix or Exact path types.
          pathType: ImplementationSpecific
  tls:
    - tlsName: chart-example-tls
      hosts:
        - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
