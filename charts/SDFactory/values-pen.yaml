ingress:
  enabled: true
  className: "nginx"
  issuer: "letsencrypt-prod"
  domain: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      if ($http_origin ~* "http.?:\/\/(.*\.)?(localhost:3000|catena-x\.net|example\.com|idses-fe\.demo\.catena-x\.net).*$") {
        set $allow_origin $http_origin;
      }

      add_header "Access-Control-Allow-Origin" "$http_origin" always;
      add_header "Access-Control-Allow-Methods" "GET, PUT, POST, OPTIONS, DELETE" always;
      add_header "Access-Control-Allow-Headers" "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization" always;
      add_header "Access-Control-Expose-Headers" "Content-Range";

      if ($request_method = 'OPTIONS') {
        add_header "Access-Control-Allow-Origin" "$http_origin" always;
        add_header "Access-Control-Allow-Methods" "GET, PUT, POST, OPTIONS, DELETE" always;
        add_header "Access-Control-Allow-Headers" "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization" always;
        add_header "Access-Control-Max-Age" "1728000" always;
        add_header "Content-Type" "text/plain charset=UTF-8";
        add_header "Content-Length" 0;
        return 204;
      }

  hosts:
    - host: "sdfactory-pen.int.demo.catena-x.net"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - tlsName: sdfactory-pen.int.demo.catena-x.net-tls
      hosts:
        - sdfactory-pen.int.demo.catena-x.net

  
sdfactory:
  secret:
    jwkSetUri: "<path:essential-services/data/custodian-pen#jwkSetUri>"
    clientId: "<path:essential-services/data/custodian-pen#clientId>"
    clientSecret: "<path:essential-services/data/custodian-pen#clientSecret>"
    authServerUrl: "<path:essential-services/data/custodian-pen#auth-server-url>"
    realm: "<path:essential-services/data/custodian-pen#realm>"
    resource: "<path:essential-services/data/custodian-pen#resource>"
    custodianWalletUri: "<path:essential-services/data/custodian-pen#uri>"
    clearingHouseUri: "<path:essential-services/data/custodian-pen#clearingHouse-uri>"
    clearingHouseServerUrl: "<path:essential-services/data/custodian-pen#clearingHouse-serverUrl>"
    clearingHouseRealm: "<path:essential-services/data/custodian-pen#clearingHouse-realm>"
    clearingHouseClientId: "<path:essential-services/data/custodian-pen#clearingHouse-clientId>"
    clearingHouseClientSecret: "<path:essential-services/data/custodian-pen#clearingHouse-clientSecret>"

